<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY ephemeral "urn:xmpp:ephemeral:0">
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Ephemeral Messages</title>
  <abstract>This specification defines a protocol to send ephemeral messages over XMPP and synchronize timer value setting across devices.</abstract>
  &LEGALNOTICE;
  <number>xxxx</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0334</spec>
    <spec>XEP-0384</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  <author>
    <firstname>Alexander</firstname>
    <surname>Krotov</surname>
    <email>ilabdsf@gmail.com</email>
  </author>
  <revision>
    <version>0.0.2</version>
    <date>2018-06-17</date>
    <initials>psa</initials>
    <remark>
      <p>Defined "open environment" and "controlled environment" use cases.</p>
      <p>Removed support for placing message contents inside ephemeral tag.</p>
      <p>Moved indication of ephemeral message support for OMEMO devices to separate PubSub node.</p>
      <p>Added XML schema.</p>
    </remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2018-04-10</date>
    <initials>psa</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>Existing protocols deployed in XMPP networks offer forward secrecy both on the transport (TLS) and message (&xep0364; and &xep0384;) levels. Forward secrecy prevents recorded communications from being decrypted even if long term encryption keys are compromised by generating ephemeral keys and securely deleting them when they are no longer needed.</p>

  <p>However, even though keys are deleted, message contents is retained both in server and client archives. While servers can be instructed with &xep0334; not to store some messages in the archives or prevented from saving them in plain text by the use of end-to-end encryption, most XMPP clients still retain message content almost indefinitely. A device with an installed XMPP client that can be lost or stolen becomes the weakest link.</p>

  <p>Unlike ephemeral keys, which have specified lifetimes, message contents cannot be removed immediately after being read. Users have to decide for how long they want to retain conversation contents. Verbally agreeing on the time interval and manually removing messages from all devices is cumbersome and error-prone.</p>

  <p>This XEP defines a way to attach a timer value to messages in order to specify for how long XMPP clients should store message contents. Besides that, it defines a way to synchronize common timer setting across all parties of the conversation.</p>

  <p>The specification does not depend on any encryption scheme and does not require encryption at all. However, sending to full JIDs or using OMEMO is required in open environment to avoid sending messages to legacy clients. A controlled environment use case is also supported, where all servers specifically indicate support for ephemeral messages and respect &xep0334;, and all entities in the network are assumed to support ephemeral messages.</p>

  <p>Other IM systems, such as <link url="https://signal.org/">Signal</link>, <link url="https://wickr.com/">Wickr</link>, <link url="https://wire.com/">Wire</link> and <link url="https://telegram.org/">Telegram</link>, already offer ephemeral messages. Signal offers timer setting synchronization feature for user groups and Telegram offers it for "secret chats", which are limited to two users.</p>
</section1>
<section1 topic='Requirements' anchor='reqs'>
  <ul>
    <li>Provide a way to specify a timer value after which message contents must be deleted from user devices.</li>
    <li>Define semantics of timer value for XMPP clients.</li>
    <li>Provide a way for a group of users to choose a common value for ephemeral message timers and synchronize it across all devices.</li>
    <li>Ensure that legacy XMPP clients do not receive ephemeral messages.</li>
  </ul>
</section1>
<section1 topic='Glossary' anchor='glossary'>
  <dl>
    <di><dt>Explicit timer setting update</dt><dd>A message without a body, sent to update timer setting on all devices participating in a chat.</dd></di>
    <di><dt>Implicit timer setting update</dt><dd>A message with a body, treated as a timer setting update for the puprose of timer setting synchronization.</dd></di>
    <di><dt>Displayed message</dt><dd>A displayed message as defined in &xep0333;.</dd></di>
    <di><dt>Read message</dt><dd>Same as displayed message.</dd></di>
  </dl>
</section1>
<section1 topic='Use Cases' anchor='usecases'>
  <p>The protocol supports two major use cases:</p>
  <ul>
    <li>Open environment.</li>
    <li>Controlled environment.</li>
  </ul>
  <p>In an open environment, no changes are required on servers, but clients have to make sure to send messages only to clients that explicitly indicate support for ephemeral messages. It can be achieved by sending to full JIDs or using OMEMO.</p>
  <p>In a controlled environment, all entities, both servers and clients, make sure to only connect to other XMPP entities that explicitly indicate support for ephemeral messages. In this case, clients can freely send messages to any XMPP entities, MUCs etc.</p>
</section1>
<section1 topic='Determining Support' anchor='support'>
  <p>If an entity supports ephemeral messages, it MUST advertise that fact in its responses to &xep0030; information (<tt>disco#info</tt> requests by returning a feature of <tt>&ephemeral;</tt>.</p>
  <example caption='A disco#info Query'><![CDATA[
<iq from='romeo@shakespeare.lit/orchard'
    id='disco1'
    to='juliet@capulet.com/balcony'
    type='get'>
    <query xmlns='http://jabber.org/protocol/disco#info'/>
</iq>
]]></example>
  <example caption='A disco#info Response'><![CDATA[
<iq from='juliet@capulet.com/balcony'
    id='disco1'
    to='romeo@shakespeare.lit/orchard'
    type='result'>
  <query xmlns='http://jabber.org/protocol/disco#info'>
    <feature var=']]>&ephemeral;<![CDATA['/>
  </query>
</iq>
]]></example>
  <p>Support can also be determined via &xep0115;.</p>
  <p>Server MAY announce the same feature to indicate that it is a part of controlled environment where ephemeral messages are supported by all entities. In this case, it MUST NOT federate with servers that do not indicate support for ephemeral messages and MUST NOT accept clients that do not indicate support for ephemeral messages.</p>
</section1>
<section1 topic='Sending an Ephemeral Message' anchor='plain'>
  <p>To send an ephemeral message, an XMPP client adds an <tt>&lt;ephemeral&gt;</tt> tag with a <tt>timer</tt> attribute set to the time interval after which the message contents is to be deleted from the recipient device.</p>
  <p>Unless an encryption scheme that supports forward secrecy (OTR and OMEMO, currently) is used, an XMPP client MUST include a <tt>&lt;no-permanent-store/&gt;</tt> hint (see &xep0334;), as any permanent storage of ephemeral message contents defeats its purpose.</p>
  <p>Here is an example of sending an ephemeral message with a 1 day timer value.</p>
  <example caption='An Ephemeral Message'><![CDATA[
<message from='romeo@montague.net/orchard'
         to='juliet@capulet.com'>
  <ephemeral xmlns=']]>&ephemeral;<![CDATA['>86400</ephemeral>
  <body>
    This is an ephemeral message.
  </body>
  <no-permanent-store xmlns="urn:xmpp:hints"/>
</message>
]]></example>
</section1>
<section1 topic='Sending a Timer Setting Update' anchor='update'>
  <p>When user manually changes ephemeral message timer setting in an XMPP client, an XMPP client SHOULD send an ephemeral message timer setting update.</p>
  <p>Timer update message SHOULD be sent immediately. An XMPP client MAY choose to postpone sending a timer setting update, remember the current value and ignore implicit timer setting updates until either the user sends a message or an explicit timer setting update is received. It may be useful, for example, to avoid waking up wireless connection when user device has low battery.</p>
  <p>A timer setting update is simply an ephemeral message without a body. However, for timer setting updates an XMPP client SHOULD use <tt>&lt;store&gt;</tt> hint, to ensure that timer setting is updated properly on offline clients when they go online.</p>
  <example caption='An Ephemeral Message Timer Update'><![CDATA[
<message from='romeo@montague.net/orchard'
    to='juliet@capulet.com'>
  <ephemeral xmlns=']]>&ephemeral;<![CDATA['>86400</ephemeral>
  <store xmlns="urn:xmpp:hints"/>
</message>
]]></example>
  <p>A timer setting update with zero duration indicates that ephemeral message timers are disabled.</p>
</section1>
<section1 topic='Receiving Ephemeral Messages' anchor='receiving'>
  <p>An XMPP client receiving a message with an <tt>&lt;ephemeral&gt;</tt> tag SHOULD update the timer setting to the value of <tt>timer</tt> attribute. It MAY ignore implicit timer setting updates if it has postponed sending a timer setting update message, as described in <link url='#update'>Sending a Timer Setting Update</link> section.</p>
  <p>The rationale for updating the timer value upon receiving implicit ephemeral messages timer setting updates is to make sure devices get synchronized eventually even if timer setting updates are lost. It may happen, for example, if some device stays offline for longer than the lifetime of offline message storage (see &xep0160;).</p>
</section1>
<section1 topic='Exchanging Ephemeral Messages in Open Environment'>
  <p>In an open environment, an XMPP client MUST make sure not to send ephemeral message contents to entities that do not support ephemeral messages. This can be achieved by sending messages to full JIDs or using OMEMO.</p>
  <section2 topic='Sending Ephemeral Messages to Full JID'>
    <p>Sending to full JID has a major drawback. An XMPP client is required to be online <link url='#support'>to determine that it supports ephemeral messages</link>, so offline XMPP clients will not receive messages.</p>
    <p>For this reason, it is NOT RECOMMENDED to send messages to full JIDs instead of bare JID unless user explicitly starts a chat with specific resource or uses protocols such as &xep0364; that explicitly require sending messages to full JID.</p>
    <example caption='An OTR Ephemeral Message'><![CDATA[
<message from='romeo@montague.net/orchard'
         to='juliet@capulet.com/balcony'>
  <body>?OTR?v23?...</body>
  <encryption xmlns="urn:xmpp:eme:0" namespace="urn:xmpp:otr:0"/>
  <no-copy xmlns="urn:xmpp:hints"/>
  <no-permanent-store xmlns="urn:xmpp:hints"/>
  <private xmlns="urn:xmpp:carbons:2"/>
  <ephemeral xmlns=']]>&ephemeral;<![CDATA['>86400</ephemeral>
</message>
]]></example>
  </section2>
  <section2 topic='Exchanging Ephemeral OMEMO Messages' anchor='omemo'>
    <p>Using OMEMO it is possible to ensure that legacy devices do not receive ephemeral messages.</p>
    <p>Each device that supports ephemeral messages announces it, and ephemeral message sender encrypts it only for devices that announced support for ephemeral messages.</p>
    <section3 topic='Announcing Support for Ephemeral Messages'>
    <p><link url='#support'>Described above mechanisms for determining support for ephemeral messages</link> are insufficient because they require XMPP clients to be online and there is no easy way to map full JIDs to devices.</p>
      <p>An OMEMO-capable device operating in open environment SHOULD indicate support by publishing a node with <tt>&lt;ephemeralsupport&gt;</tt> element, similarly to how device bundles are published in &xep0384;.</p>
      <example caption='Announcing Ephemeral Message Support for Device 12345'><![CDATA[
<iq from='juliet@capulet.lit' type='set' id='announce'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node=']]>&ephemeral;<![CDATA[:12345'>
      <item>
        <ephemeralsupport xmlns=']]>&ephemeral;<![CDATA['/>
      </item>
    </publish>
  </pubsub>
</iq>
]]></example>
    </section3>
    <section3 topic='Sending an Ephemeral Message' anchor='omemo-send'>
      <p>When sending an ephemeral OMEMO message in open environment, an XMPP client MUST NOT encrypt it for devices that did not indicate support for ephemeral messages explicitly.</p>
    </section3>
  </section2>
</section1>
<section1 topic='Timer Management' anchor='timer'>
  <p>Sender device MUST start the timer immediately after sending it, if &xep0198; is not used or after receiving an acknowledgement for <tt>&lt;message&gt;</tt> stanza, if Stream Management is available. This rule prevents the message from being deleted before it is successfully delivered to the server.</p>
  <p>Device receiving a &xep0280; carbon copy MUST start the timer immediately.</p>
  <p>Messages received from other JID MUST be stored along with their timer value and timer SHOULD NOT start until the message is displayed.</p>
  <p>When a message is displayed, an XMPP client starts a timer and MUST securely delete message contents from the device when the timer expires.</p>
  <p>If &xep0333; are used and received message is marked as displyed by another XMPP client it SHOULD be considered to be displayed.</p>
  <p>An XMPP client SHOULD NOT display message contents outside the chat window, for example in system notifications. However, it MAY be displayed without starting the timer in windows controlled by the XMPP client, for example if the last message for the contact is displayed in the roster window. If &xep0333; are implemented, the same rules MUST be used to send displayed chat marker and starting timers.</p>
</section1>
<section1 topic='Encrypted Ephemeral Messages' anchor='encrypted'>
  <p>Some encryption schemes, such as &xep0374;, allow to encrypt the <tt>&lt;ephemeral&gt;</tt> tag itself. If such a scheme is used, an XMPP client SHOULD encrypt <tt>&lt;ephemeral&gt;</tt> tag.</p>
  <p>If <tt>&lt;ephemeral&gt;</tt> is encrypted, timer setting may become unsynchronized for devices that can not decrypt ephemeral messages. For this reason, whenever user changes an encryption scheme, an XMPP client SHOULD <link url='#update'>send an explicit timer setting update</link>. An XMPP client MAY not send an explicit timer setting update if the same timer value was the last one to be sent for the same encryption settings before.</p>
</section1>
<section1 topic='Implementation Notes' anchor='impl'>
  <p>Currently XMPP mostly relies on &xep0313; to deliver messages to offline clients. Because ephemeral messages (with the exception of OMEMO messages) carry a <tt>&lt;no-permanent-store/&gt;</tt> hint, they are not stored in the MAM and cannot be reliably delivered to offline clients. To avoid bad user experience, servers need to implement some mechanism for reliable offline message delivery without permanent storage if they support ephemeral messages.</p>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>Devices implementing this specification MUST securely delete messages. For example, if SQLite is used as a database, <tt>secure_delete</tt> pragma MUST be set to 1 explicitly.</p>
  <p>An XMPP client MUST NOT let the message contents outside the application, even to display it in a system notification, without explicit user action, such as copying message contents to clipboard or forwarding it. It has <link url='https://objective-see.com/blog/blog_0x2E.html'>led to privacy issues in existing IM software before</link>.</p>
  <p>An XMPP client SHOULD NOT try to restrict the ability of the user to copy and forward ephemeral messages. Any such measures will give the user a false sense of security, but can be easily circumvented by using a modified XMPP client.</p>
  <p>Servers in a controlled environment MUST NOT deliver ephemeral message contents in push notifications (&xep0357;).</p>
  <p>XMPP clients implementing &xep0146; MUST NOT forward ephemeral messages when <link url='https://xmpp.org/extensions/xep-0146.html#forward'>a command to forward unread messages</link> is sent.</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with the Internet Assigned Numbers Authority (IANA).</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>This specification defines the following XML namespaces:</p>
  <ul>
    <li>&ephemeral;</li>
  </ul>
  <p>Upon advancement of this specification from a status of Experimental to a status of Draft, the &REGISTRAR; shall add the foregoing namespace to the registry located at &NAMESPACES;, as described in Section 4 of &xep0053;.</p>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace=']]>&ephemeral;<![CDATA['
    xmlns=']]>&ephemeral;<![CDATA['
    elementFormDefault='qualified'>

  <xs:annotation>
    <xs:documentation>
      The protocol documented by this schema is defined in
      XEP-xxxx: http://www.xmpp.org/extensions/xep-xxxx.html
    </xs:documentation>
  </xs:annotation>

  <xs:element name="ephemeral" type="xs:nonNegativeInteger"/>

  <xs:element name="ephemeralsupport"/>
</xs:schema>
]]></code>
</section1>
</xep>
