<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>vcard-temp</title>
  <abstract>This specification provides canonical documentation of the vCard-XML format currently in use within the Jabber community.</abstract>
  &LEGALNOTICE;
  <number>0054</number>
  <status>Active</status>
  <type>Historical</type>
  <sig>Standards</sig>
  <dependencies>
    <spec>XMPP Core</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>vcard-temp</shortname>
  &stpeter;
  <revision>
    <version>1.2</version>
    <date>2008-07-16</date>
    <initials>psa</initials>
    <remark><p>More fully specified error cases; added section on determining support.</p></remark>
  </revision>
  <revision>
    <version>1.1</version>
    <date>2003-03-26</date>
    <initials>psa</initials>
    <remark><p>Clarified certain historical inaccuracies and added links to archived versions of Frank Dawson's Internet-Drafts.</p></remark>
  </revision>
  <revision>
    <version>1.0</version>
    <date>2003-01-09</date>
    <initials>psa</initials>
    <remark><p>Updated status to Active per vote of the Jabber Council.</p></remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2002-11-06</date>
    <initials>psa</initials>
    <remark><p>Many small fixes; added implementation notes.</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2002-10-31</date>
    <initials>psa</initials>
    <remark><p>Initial version.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>This specification documents the vCard-XML format currently in use within the Jabber community. A future specification will recommend a standards-track protocol to supersede this informational document.</p>
  <p>The basic functionality is for a user to store and retrieve an XML representation of his or her vCard using the data storage capabilities native to all existing Jabber server implementations. This is done by by sending an &lt;iq/&gt; of type "set" (storage) or "get" (retrieval) to one's Jabber server containing a &lt;vCard/&gt; child scoped by the 'vcard-temp' namespace, with the &lt;vCard/&gt; element containing the actual vCard-XML elements as defined by the vCard-XML DTD. Other users may then view one's vCard information.</p>
</section1>
<section1 topic='History' anchor='history'>
  <p>vCards are an existing and widely-used standard for personal user information storage, somewhat like an electronic business card. The vCard format is defined in &rfc2426;.</p>
  <p>In 1998 and 1999, Frank Dawson submitted four revisions of an Internet-Draft proposing to represent the standard vCard format in XML. When the jabberd open-source project was originally looking for a method to store personal user information, the most recent revision consulted by the jabberd developers was draft-dawson-vcard-xml-dtd-01 <note>This document is archived at &lt;<link url='http://www.watersprings.org/pub/id/draft-dawson-vcard-xml-dtd-01.txt'>http://www.watersprings.org/pub/id/draft-dawson-vcard-xml-dtd-01.txt</link>&gt;.</note>. He also submitted a -02 revision on November 15, 1998 <note>This document is archived at &lt;<link url='http://www.watersprings.org/pub/id/draft-dawson-vcard-xml-dtd-02.txt'>http://www.watersprings.org/pub/id/draft-dawson-vcard-xml-dtd-02.txt</link>&gt;.</note> and a -03 revision on June 22, 1999 <note>This document is archived at &lt;<link url='http://www.watersprings.org/pub/id/draft-dawson-vcard-xml-dtd-03.txt'>http://www.watersprings.org/pub/id/draft-dawson-vcard-xml-dtd-03.txt</link>&gt;.</note>.</p>
  <p>Unfortunately, Dawson's proposal did not move forward within the IETF's standards process. For reasons now lost in the mists of time, the Jabber project continued to use the DTD from draft-dawson-vcard-xml-dtd-01, making two small modifications to adapt it for use within the Jabber community (adding the JABBERID and DESC elements) but also specifying element names in all caps rather than lowercase as defined in draft-dawson-vcard-xml-dtd-01. In addition, the Jabber community followed the usage (but not DTD) in that draft regarding version information, including it as an attribute of the vCard element rather than as a child element. This format was implemented within the Jabber community under the 'vcard-temp' namespace.</p>
</section1>
<section1 topic='Use Cases' anchor='usecases'>
  <section2 topic="Retrieving One's vCard">
    <p>A user retrieves his or her own vCard by sending an IQ-get with no 'to' address and containing a &lt;vCard/&gt; child element qualified by the 'vcard-temp' namespace.</p>
    <example caption="vCard Retrieval Request"><![CDATA[
<iq from='stpeter@jabber.org/roundabout'
    id='v1'
    type='get'>
  <vCard xmlns='vcard-temp'/>
</iq>
    ]]></example>
    <p>If a vCard exists for the user, the server MUST return in an IQ-result:</p>
    <example caption="Server Returns vCard"><![CDATA[
<iq id='v1'
    to='stpeter@jabber.org/roundabout'
    type='result'>
  <vCard xmlns='vcard-temp'>
    <FN>Peter Saint-Andre</FN>
    <N>
      <FAMILY>Saint-Andre</FAMILY>
      <GIVEN>Peter</GIVEN>
      <MIDDLE/>
    </N>
    <NICKNAME>stpeter</NICKNAME>
    <URL>http://www.xmpp.org/xsf/people/stpeter.shtml</URL>
    <BDAY>1966-08-06</BDAY>
    <ORG>
      <ORGNAME>XMPP Standards Foundation</ORGNAME>
      <ORGUNIT/>
    </ORG>
    <TITLE>Executive Director</TITLE>
    <ROLE>Patron Saint</ROLE>
    <TEL><WORK/><VOICE/><NUMBER>303-308-3282</NUMBER></TEL>
    <TEL><WORK/><FAX/><NUMBER/></TEL>
    <TEL><WORK/><MSG/><NUMBER/></TEL>
    <ADR>
      <WORK/>
      <EXTADD>Suite 600</EXTADD>
      <STREET>1899 Wynkoop Street</STREET>
      <LOCALITY>Denver</LOCALITY>
      <REGION>CO</REGION>
      <PCODE>80202</PCODE>
      <CTRY>USA</CTRY>
    </ADR>
    <TEL><HOME/><VOICE/><NUMBER>303-555-1212</NUMBER></TEL>
    <TEL><HOME/><FAX/><NUMBER/></TEL>
    <TEL><HOME/><MSG/><NUMBER/></TEL>
    <ADR>
      <HOME/>
      <EXTADD/>
      <STREET/>
      <LOCALITY>Denver</LOCALITY>
      <REGION>CO</REGION>
      <PCODE>80209</PCODE>
      <CTRY>USA</CTRY>
    </ADR>
    <EMAIL><INTERNET/><PREF/><USERID>stpeter@jabber.org</USERID></EMAIL>
    <JABBERID>stpeter@jabber.org</JABBERID>
    <DESC>
      More information about me is located on my
      personal website: http://www.saint-andre.com/
    </DESC>
  </vCard>
</iq>
    ]]></example>
    <p>If no vCard exists, the server MUST return a stanza error (which SHOULD be &notfound;) or an IQ-result containing an empty &lt;vCard/&gt; element.</p>
    <example caption="No vCard (item-not-found)"><![CDATA[
<iq id='v1'
    to='stpeter@jabber.org/roundabout'
    type='error'>
  <vCard xmlns='vcard-temp'/>
  <error type='cancel'>
    <item-not-found xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
  </error>
</iq>
    ]]></example>
    <example caption="No vCard (empty element)"><![CDATA[
<iq id='v1'
    to='stpeter@jabber.org/roundabout'
    type='result'>
  <vCard xmlns='vcard-temp'/>
</iq>
    ]]></example>
  </section2>
  <section2 topic="Updating One&apos;s vCard">
    <p>A user may publish or update his or her vCard by sending an IQ of type "set" with no 'to' address, following the format in the previous use case.</p>
    <example caption="vCard Update Request"><![CDATA[
<iq id='v2' type='set'>
  <vCard xmlns='vcard-temp'>
    <FN>Peter Saint-Andre</FN>
    <N>
      <FAMILY>Saint-Andre</FAMILY>
      <GIVEN>Peter</GIVEN>
      <MIDDLE/>
    </N>
    <NICKNAME>stpeter</NICKNAME>
    <URL>http://www.xmpp.org/xsf/people/stpeter.shtml</URL>
    <BDAY>1966-08-06</BDAY>
    <ORG>
      <ORGNAME>XMPP Standards Foundation</ORGNAME>
      <ORGUNIT/>
    </ORG>
    <TITLE>Executive Director</TITLE>
    <ROLE>Patron Saint</ROLE>
    <TEL><WORK/><VOICE/><NUMBER>303-308-3282</NUMBER></TEL>
    <TEL><WORK/><FAX/><NUMBER/></TEL>
    <TEL><WORK/><MSG/><NUMBER/></TEL>
    <ADR>
      <WORK/>
      <EXTADD>Suite 600</EXTADD>
      <STREET>1899 Wynkoop Street</STREET>
      <LOCALITY>Denver</LOCALITY>
      <REGION>CO</REGION>
      <PCODE>80202</PCODE>
      <CTRY>USA</CTRY>
    </ADR>
    <TEL><HOME/><VOICE/><NUMBER>303-555-1212</NUMBER></TEL>
    <TEL><HOME/><FAX/><NUMBER/></TEL>
    <TEL><HOME/><MSG/><NUMBER/></TEL>
    <ADR>
      <HOME/>
      <EXTADD/>
      <STREET/>
      <LOCALITY>Denver</LOCALITY>
      <REGION>CO</REGION>
      <PCODE>80209</PCODE>
      <CTRY>USA</CTRY>
    </ADR>
    <EMAIL><INTERNET/><PREF/><USERID>stpeter@jabber.org</USERID></EMAIL>
    <JABBERID>stpeter@jabber.org</JABBERID>
    <DESC>
      Check out my blog at https://stpeter.im/
    </DESC>
  </vCard>
</iq>
    ]]></example>
    <p>The server then returns an IQ-result (or an IQ-error).</p>
    <example caption="Server Returns Success"><![CDATA[
<iq id='v2'
    to='stpeter@jabber.org/roundabout'
    type='result'/>
    ]]></example>
    <p>Notice that the previous IQ-set included only one changed element (the &lt;DESC/&gt; element). Currently there is no method for partial updates of a vCard, and the entire vCard must be sent to the server in order to update any part of the vCard.</p>
    <p>If a user attempts to perform an IQ set on another user's vCard (i.e., by setting a 'to' address to a JID other than the sending user's bare JID), the server MUST return a stanza error, which SHOULD be &forbidden; or &notallowed;.</p>
    <example caption="Entity Attempts to Modify Another Entity&apos;s vCard"><![CDATA[
<iq id='v2'
    to='stpeter@jabber.org/roundabout'
    type='error'>
  <error type='auth'>
    <forbidden xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
  </error>
</iq>
    ]]></example>
  </section2>
  <section2 topic="Viewing Another User&apos;s vCard">
    <p>A user may view another user's vCard by sending an IQ of type "get" to the other user's bare JID.</p>
    <example caption="Requesting Another User's vCard"><![CDATA[
<iq from='stpeter@jabber.org/roundabout'
    id='v3'
    to='jer@jabber.org'
    type='get'>
  <vCard xmlns='vcard-temp'/>
</iq>
    ]]></example>
    <p>In accordance with &xmppcore;, a compliant server MUST respond on behalf of the requestor and not forward the IQ to the requestee's connected resource.</p>
    <example caption="Receiving Another User's vCard"><![CDATA[
<iq from='jer@jabber.org'
    to='stpeter@jabber.org/roundabout'
    type='result'
    id='v3'>
  <vCard xmlns='vcard-temp'>
    <FN>JeremieMiller</FN>
    <N>
      <GIVEN>Jeremie</GIVEN>
      <FAMILY>Miller</FAMILY>
      <MIDDLE/>
    </N>
    <NICKNAME>jer</NICKNAME>
    <EMAIL><INTERNET/><PREF/><USERID>jeremie@jabber.org</USERID></EMAIL>
    <JABBERID>jer@jabber.org</JABBERID>
  </vCard>
</iq>
    ]]></example>
    <p>If no vCard exists or the user does not exist, the server MUST return a stanza error, which SHOULD be either &unavailable; or &notfound; (but the server MUST return the same error condition in both cases to help prevent directory harvesting attacks).</p>
    <example caption="No vCard"><![CDATA[
<iq id='v3'
    to='stpeter@jabber.org/roundabout'
    type='error'>
  <vCard xmlns='vcard-temp'/>
  <error type='cancel'>
    <service-unavailable xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
  </error>
</iq>
    ]]></example>
    <p>Note: The use of vCards is not limited to accounts associated with human users. For example, an XMPP server could itself have a vCard that defines the server's hosting organization, physical location, and relevant contact addresses.</p>
  </section2>
</section1>
<section1 topic='Determining Support' anchor='support'>
  <p>If an entity supports the vcard-temp protocol, it MUST report that by including a service discovery feature of "vcard-temp" &NSNOTE; in response to a &xep0030; information request:</p>
  <example caption="Service Discovery Information Request"><![CDATA[
<iq type='get'
    from='juliet@capulet.lit/balcony'
    to='capulet.lit'
    id='disco1'>
  <query xmlns='http://jabber.org/protocol/disco#info'/>
</iq>
  ]]></example>
  <example caption="Service Discovery Information Response"><![CDATA[
<iq type='result'
    from='capulet.lit'
    to='juliet@capulet.lit/balcony'
    id='disco1'>
  <query xmlns='http://jabber.org/protocol/disco#info'>
    ...
    <feature var='vcard-temp'/>
    ...
  </query>
</iq>
  ]]></example>
  <p>This information can also be encapsulated via &xep0115; for entities who share presence.</p>
</section1>

<section1 topic='Security Considerations' anchor='security'>
  <p>The vCard information published to one's Jabber server is world-readable; therefore, users should exercise due caution when determining what information to include (e.g., street addresses, personal telephone numbers, or email addresses).</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='registrar-ns'>
    <p>The &REGISTRAR; includes the 'vcard-temp' namespace in its registry of official namespaces (see &NAMESPACES;).</p>
  </section2>
  <section2 topic='URI Query Types' anchor='registrar-querytypes'>
    <p>As authorized by &xep0147;, the XMPP Registrar maintains a registry of queries and key-value pairs for use in XMPP URIs (see &QUERYTYPES;).</p>
    <p>The "vcard" querytype is registered as a vCard-related action.</p>
    <example caption='vCard Action: IRI/URI'><![CDATA[
xmpp:romeo@montague.net?vcard
    ]]></example>
    <example caption='vCard Action: Resulting Stanza'><![CDATA[
<iq to='romeo@montague.net' type='get'>
  <vCard xmlns='vcard-temp'/>
</iq>
    ]]></example>
    <p>The following submission registers the "vcard" querytype.</p>
    <code><![CDATA[
<querytype>
  <name>vcard</name>
  <proto>vcard-temp</proto>
  <desc>enables retrieval of an entity's vCard data</desc>
  <doc>XEP-0054</doc>
</querytype>
    ]]></code>
  </section2>
</section1>
<section1 topic='Implementation Notes' anchor='impl'>
  <p>Note the following:</p>
  <ul>
    <li>The correct capitalization of the wrapper element is &lt;vCard/&gt; (and XML element names are case-sensitive).</li>
    <li>All elements within the &lt;vCard/&gt; element MUST be in ALL CAPS (even though this is at odds with draft-dawson-vcard-xml-dtd-01).</li>
    <li>The country abbreviation is contained in a &lt;CTRY/&gt; element, <em>not</em> a &lt;COUNTRY/&gt; element (even though this is at odds with draft-dawson-vcard-xml-dtd-01).</li>
    <li>Phone numbers MUST be contained in a &lt;NUMBER&gt; element, not included as CDATA within the &lt;TEL/&gt; element.</li>
    <li>If no telephone number is included in a &lt;TEL/&gt; element, an empty &lt;NUMBER/&gt; child MUST be included.</li>
    <li>Email addresses MUST be contained in a &lt;USERID&gt; element, not included as CDATA within the &lt;EMAIL/&gt; element.</li>
    <li>Some Jabber implementations add a 'version' attribute to the &lt;vCard/&gt; element, with the value set at "2.0" or "3.0". The DTD is incorrect, and the examples in draft-dawson-vcard-xml-dtd-01 clearly show that version information is to be included by means of a 'version' attribute, not the &lt;VERSION/&gt; element as defined in the DTD. However, to conform to draft-dawson-vcard-xml-dtd-01, the value should be "3.0", not "2.0".</li>
  </ul>
</section1>
<section1 topic='DTD' anchor='dtd'>
  <p>The following DTD is a slightly modified version of that contained in draft-dawson-vcard-xml-dtd-01. The only modifications were to add the JABBERID and DESC elements.</p>
  <code><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>

<!--
Copyright (C) The Internet Society (2000). All Rights Reserved.

This document and translations of it may be copied and
furnished to others, and derivative works that comment
on or otherwise explain it or assist in its implmentation
may be prepared, copied, published and distributed, in whole
or in part, without restriction of any kind, provided that
the above copyright notice and this paragraph are included
on all such copies and derivative works.

However, this document itself may not be modified in any
way, such as by removing the copyright notice or references
to the Internet Society or other Internet organizations,
except as needed for the purpose of developing Internet
standards in which case the procedures for copyrights
defined in the Internet Standards process MUST be followed,
or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will
not be revoked by the Internet Society or its successors or
assigns.

This document and the information contained herein is provided
on an "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET
ENGINEERING TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE
USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR
ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A
PARTICULAR PURPOSE.
-->

<!-- ==== -->

<!-- NOTE: the following root element is not used in the
           modified vcard-temp DTD published by the Jabber
           project (now XMPP Standards Foundation) and is
           included here only for historical purposes;
           implementations that comply with vcard-temp must
           specify the root element as vCard, not xCard. -->

<!-- Root element and container for one
  or more vCard objects -->
<!ELEMENT xCard (vCard)+>

<!-- Individual vCard container -->
<!ELEMENT vCard (
  (VERSION, FN, N),
  (NICKNAME?,
  PHOTO?,
  BDAY?,
  ADR?,
  LABEL?,
  TEL?,
  EMAIL?,
  JABBERID?,
  MAILER?,
  TZ?,
  GEO?,
  TITLE?,
  ROLE?,
  LOGO?,
  AGENT?,
  ORG?,
  CATEGORIES?,
  NOTE?,
  PRODID?,
  REV?,
  SORT-STRING?,
  SOUND?,
  UID?,
  URL?,
  CLASS?,
  KEY?,
  DESC?
)*)>

  <!-- vCard specification version property.
    This MUST be 2.0, if the document conforms to RFC 2426. -->
  <!ELEMENT VERSION (#PCDATA)>

  <!-- Formatted or display name property. -->
  <!ELEMENT FN (#PCDATA)>

  <!-- Structured name property. Name components with multiple
    values must be specified as a comma separated
	list of values. -->
  <!ELEMENT N ( FAMILY?, GIVEN?, MIDDLE?, PREFIX?, SUFFIX?)>

    <!ELEMENT FAMILY (#PCDATA)>
    <!ELEMENT GIVEN (#PCDATA)>
    <!ELEMENT MIDDLE (#PCDATA)>
    <!ELEMENT PREFIX (#PCDATA)>
    <!ELEMENT SUFFIX (#PCDATA)>

  <!-- Nickname property. Multiple nicknames must be
    specified as a comma separated list value. -->
  <!ELEMENT NICKNAME (#PCDATA)>

  <!-- Photograph property. Value is either a BASE64 encoded
    binary value or a URI to the external content. -->
  <!ELEMENT PHOTO ((TYPE, BINVAL) | EXTVAL)>

  <!-- Birthday property. Value must be an ISO 8601 formatted
    date or date/time value. -->
  <!ELEMENT BDAY (#PCDATA)>

  <!-- Structured address property. Address components with
    multiple values must be specified as a comma separated list
    of values. -->
  <!ELEMENT ADR (
    HOME?,
    WORK?,
    POSTAL?,
    PARCEL?,
    (DOM | INTL)?,
    PREF?,
    POBOX?,
    EXTADD?,
    STREET?,
    LOCALITY?,
    REGION?,
    PCODE?,
    CTRY?
  )>

    <!ELEMENT POBOX (#PCDATA)>
    <!ELEMENT EXTADD (#PCDATA)>
    <!ELEMENT STREET (#PCDATA)>
    <!ELEMENT LOCALITY (#PCDATA)>
    <!ELEMENT REGION (#PCDATA)>
    <!ELEMENT PCODE (#PCDATA)>
    <!ELEMENT CTRY (#PCDATA)>

  <!-- Address label property. -->
  <!ELEMENT LABEL (
    HOME?,
    WORK?,
    POSTAL?,
    PARCEL?,
    (DOM | INTL)?,
    PREF?,
    LINE+
  )>

    <!-- Individual label lines. -->
    <!ELEMENT LINE (#PCDATA)>

  <!-- Telephone number property. -->
  <!ELEMENT TEL (
    HOME?,
    WORK?,
    VOICE?,
    FAX?,
    PAGER?,
    MSG?,
    CELL?,
    VIDEO?,
    BBS?,
    MODEM?,
    ISDN?,
    PCS?,
    PREF?,
    NUMBER
  )>

    <!-- Phone number value. -->
    <!ELEMENT NUMBER (#PCDATA)>

  <!-- Email address property. Default type is INTERNET. -->
  <!ELEMENT EMAIL (
    HOME?,
    WORK?,
    INTERNET?,
    PREF?,
    X400?,
    USERID
  )>

    <!ELEMENT USERID (#PCDATA)>

  <!-- NOTE: the following element was added by the Jabber
             project (now XMPP Standards Foundation) to
             handle Jabber IDs; the value must be in the
             form of user@host -->

  <!ELEMENT JABBERID (#PCDATA)>

  <!-- Mailer (e.g., Mail User Agent Type) property. -->
  <!ELEMENT MAILER (#PCDATA)>

  <!-- Time zone's Standard Time UTC offset. Value must be an
    ISO 8601 formatted UTC offset. -->
  <!ELEMENT TZ (#PCDATA)>

  <!-- Geographical position. Values are the decimal degress of
    LATitude and LONgitude. The value should be specified to
    six decimal places.-->
  <!ELEMENT GEO (LAT, LON)>

    <!-- Latitude value. -->
    <!ELEMENT LAT (#PCDATA)>

    <!-- Longitude value. -->
    <!ELEMENT LON (#PCDATA)>

  <!-- Title property. -->
  <!ELEMENT TITLE (#PCDATA)>

  <!-- Role property. -->
  <!ELEMENT ROLE (#PCDATA)>

  <!-- Organization logo property. -->
  <!ELEMENT LOGO ((TYPE, BINVAL) | EXTVAL)>

  <!-- Administrative agent property. -->
  <!ELEMENT AGENT (vCard | EXTVAL)>

  <!-- Organizational name and units property. -->
  <!ELEMENT ORG (ORGNAME, ORGUNIT*)>

    <!ELEMENT ORGNAME (#PCDATA)>

    <!ELEMENT ORGUNIT (#PCDATA)>

  <!-- Application specific categories property. -->
  <!ELEMENT CATEGORIES (KEYWORD+)>

    <!ELEMENT KEYWORD (#PCDATA)>

  <!-- Commentary note property. -->
  <!ELEMENT NOTE (#PCDATA)>

  <!-- Identifier of product that generated the vCard property. -->
  <!ELEMENT PRODID (#PCDATA)>

  <!-- Last revised property. The value must be an
       ISO 8601 formatted UTC date/time. -->
  <!ELEMENT REV (#PCDATA)>

  <!-- Sort string property. -->
  <!ELEMENT SORT-STRING (#PCDATA)>

  <!-- Formatted name pronunciation property. The value is
       either a textual phonetic pronunciation, a BASE64
       encoded binary digital audio pronunciation or a URI to
       an external binary digital audio pronunciation.-->
  <!ELEMENT SOUND (PHONETIC | BINVAL | EXTVAL)>

    <!-- Textual phonetic pronunciation. -->
    <!ELEMENT PHONETIC (#PCDATA)>

  <!-- Unique identifier property. -->
  <!ELEMENT UID (#PCDATA)>

  <!-- Directory URL property. -->
  <!ELEMENT URL (#PCDATA)>

  <!-- NOTE: the following element was added by the Jabber
             project (now XMPP Standards Foundation) to
             handle free-form descriptive text. -->

  <!ELEMENT DESC (#PCDATA)>

  <!-- Privacy classification property. -->
  <!ELEMENT CLASS (PUBLIC | PRIVATE | CONFIDENTIAL)>

    <!ELEMENT PUBLIC EMPTY>

    <!ELEMENT PRIVATE EMPTY>

    <!ELEMENT CONFIDENTIAL EMPTY>

  <!-- Authentication credential or encryption  key property. -->
  <!ELEMENT KEY (TYPE?, CRED)>

    <!ELEMENT CRED (#PCDATA)>

<!-- ==== -->

<!-- Common elements. -->

<!-- Addressing type indicators. -->
<!ELEMENT HOME EMPTY>
<!ELEMENT WORK EMPTY>
<!ELEMENT POSTAL EMPTY>
<!ELEMENT PARCEL EMPTY>
<!ELEMENT DOM EMPTY>
<!ELEMENT INTL EMPTY>
<!ELEMENT PREF EMPTY>
<!ELEMENT VOICE EMPTY>
<!ELEMENT FAX EMPTY>
<!ELEMENT PAGER EMPTY>
<!ELEMENT MSG EMPTY>
<!ELEMENT CELL EMPTY>
<!ELEMENT VIDEO EMPTY>
<!ELEMENT BBS EMPTY>
<!ELEMENT MODEM EMPTY>
<!ELEMENT ISDN EMPTY>
<!ELEMENT PCS EMPTY>
<!ELEMENT INTERNET EMPTY>
<!ELEMENT X400 EMPTY>

<!-- Format type parameter. -->
<!ELEMENT TYPE (#PCDATA)>

<!-- Base64 encoded binary value. -->
<!ELEMENT BINVAL (#PCDATA)>

<!-- URI to external binary value -->
<!ELEMENT EXTVAL (#PCDATA)>

<!-- ==== -->
  ]]></code>
</section1>
</xep>
