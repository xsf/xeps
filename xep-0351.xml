<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Recipient Server Side Notifications Filtering</title>
  <abstract>This specification defines a modern efficient way to deliver PubSub notifications.</abstract>
  &LEGALNOTICE;
  <number>0351</number>
  <status>Experimental</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0001</spec>
    <spec>XEP-0060</spec>
    <spec>XEP-0115</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  <author>
    <firstname>Sergey</firstname>
    <surname>Dobrov</surname>
    <email>Binary@JRuDevels.org</email>
    <jid>Binary@JRuDevels.org</jid>
  </author>
  <revision>
    <version>0.1</version>
    <date>2014-08-28</date>
    <initials>XEP Editor(aw)</initials>
    <remark><p>Initial published version approved by the XMPP Council.</p></remark>
  </revision>
  <revision>
    <version>0.0.2</version>
    <date>2014-07-20</date>
    <initials>sd</initials>
    <remark><p>Updated based on Council feedback.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2014-05-20</date>
    <initials>sd</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>&xep0060; in conjuction with &xep0115; defines a way for a client to get rid of unwanted pubsub notifications and hence save significant amount of traffic. The protocol is quite flexible and reliable and is able to work even with servers that don't support filtering. Unfortunately, this reliability has its costs and the protocol has the following disadvantages:</p>
  <ul>
    <li>it's impossible to be subscribed to a person's feed if the person is not subscribed to you because in this case his server doesn't know your presence information and your capabilities and hence it can't filter the messages appropriately, so you won't receive any notifications at all;</li>
    <li>servers need to know not only their users' capabilities but also the capabilities of all the users that it wants to communicate;</li>
    <li>clients can't decide what kind of notifications they want to receive; node owner decides instead, but clients might not be interested in some of notifications or vice versa.</li>
  </ul>
  <p>The most actual example of the problems that are beget with these disadvantages is the &xep0277;: you won't be able to subscribe to a user's blog if he doesn't want to read your blog as well. This will be a big problem for popular bloggers that can't read all the feeds of their readers.</p>
  <p>Another one is a bot which want to gather information from a lot of users. For instance, we can want to write a bot which gather geo-location from a lot of devices, then it will subscribe to these devices but they may not want to do so. The new protocol will allow such bots to operate this way.</p>
  <p>Also, some clients may want to receive retract items events to appropriately update their feed data storage but some other clients may not want to store feeds at all and just show the recent events and corollary don't need in these events. This standard allows the first one to receive those events and the last one to get rid of them saving traffic, regardless of node settings which can be configured solely by the node's owner.</p>
</section1>
<section1 topic='Requirements' anchor='reqs'>
  <p>The new protocol is needed to solve the stated problems that will allow to move the notifications filtering process from the sender side to the recipient side, that will allow us to filter them in a more flexible way. Also, we must care of:</p>
  <ul>
    <li>backwards-compatibility: users of servers that don't support this XEP should be able to receive the notifications through the old protocol;</li>
    <li>users should be able to control what kind of events they want to receive besides the nodes types.</li>
  </ul>
</section1>
<section1 topic='Use Cases' anchor='usecases'>
  <p>This document should cover the following use cases:</p>
  <ul>
    <li>switching to the new protocol if the recipient's server support it;</li>
    <li>sending a notification;</li>
    <li>receiving a notification by server and broadcasting it to its users;</li>
    <li>advertising client's filtering preferences.</li>
  </ul>
  <section2 topic="Switching protocols">
    <p>Since we require the implementations to be backwards compatible, we need a mechanism for a sender to know if the recipient's server supports the modern protocol or not.</p>
    <p>To know this, sender's server should check recipient's capabilities as described at &xep0115; in the "Stream Feature" section: if the server supports the "urn:xmpp:rsf:0" feature then the server SHOULD use the protocol that's described here, if the server lacks support of this feature or doesn't provide its capabilities at all then the sender MUST NOT use this protocol.</p>
  </section2>
  <section2 topic="Sending and receiving a notification">
    <p>When using this protocol to deliver notifications, the server MUST follow these rules:</p>
    <ul>
      <li>send all the notifications that can be generated by the pubsub node without any care of node settings to make it possible for users to choose which notifications they want to receive instead.</li>
    </ul>
    <example caption='Sending the notification'>
        <![CDATA[
<message from='user@example.net'
         to='user1@example.com'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='n48ad4fj78zn38st734'>
      <item id='i1s2d3f4g5h6bjeh936'>
        <geoloc xmlns='http://jabber.org/protocol/geoloc'>
          <description>Venice</description>
          <lat>45.44</lat>
          <lon>12.33</lon>
        </geoloc>
      </item>
    </items>
  </event>
</message>
<message from='user@example.net'
         to='user2@example.com'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='n48ad4fj78zn38st734'>
      <item id='i1s2d3f4g5h6bjeh936'>
        <geoloc xmlns='http://jabber.org/protocol/geoloc'>
          <description>Venice</description>
          <lat>45.44</lat>
          <lon>12.33</lon>
        </geoloc>
      </item>
    </items>
  </event>
</message>
... and so on
]]>
    </example>
    <p>Recipient server is responsible now to filter out and broadcast that messages with events that were request by each user's resource.</p>
  </section2>
  <section2 topic="Advertising client's filtering preferences">
    <p>As described at &xep0060;'s "Filtered notifications" section, client should add payload's NodeID and "+notify" postfix to tell which types of content it can and want to process.</p>
    <p>This document extends this filtering feature to allow clients also select which event types it wants to receive.</p>
    <p>To advertise user's preferences it should add a feature in its capabilities that MUST consist of payload's NodeID with appended "+events-" postfix and then append a list of necessary payload types. Here are the rules of generating this list:</p>
    <ul>
      <li>list should contain payload types those can be one of the following: config, delete, retract, sub as described in &xep0060;;</li>
      <li>order the list ascending;</li>
      <li>concatenate the items through the "-" sign.</li>
    </ul>
    <p>For example, the following string will mean that user wants to receive new items, node configuration changes and new subscriptions geolocation events, it should add the following features in its capabilities:</p>
    <ul>
      <li>http://jabber.org/protocol/geoloc+notify</li>
      <li>http://jabber.org/protocol/geoloc+events-config-sub</li>
    </ul>
    <p>The recipient's server MUST drop the notifications that are not in the list. New items notifications are implied by the "+notify" filter. If user doesn't specify the "+events" filter then the server SHOULD treat it as absence of any filtering at all.</p>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>PENDING</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with the Internet Assigned Numbers Authority (IANA).</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>REQUIRED.</p>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <p>This protocol doesn't define any XML stanzas.</p>
</section1>
</xep>
