<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM "xep.ent">
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Pub-Sub Subscriptions</title>
  <abstract>A proposal for the subscribe half of a publish-subscribe protocol within Jabber.</abstract>
  &LEGALNOTICE;
  <number>0036</number>
  <status>Retracted</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <dependencies/>
  <supersedes/>
  <supersededby><spec>XEP-0060</spec></supersededby>
  <shortname>None</shortname>
  &pgmillard;
  &stpeter;
  <revision>
    <version>0.2</version>
    <date>2003-04-22</date>
    <initials>psa</initials>
    <remark>At the request of the authors, the status of this specification has been changed to Retracted since it has been superseded by XEP-0060.</remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2002-07-12</date>
    <initials>psa</initials>
    <remark>Initial version based on discussions at JabberConf.</remark>
  </revision>
</header>
<section1 topic='Introduction'>
  <p>The Jabber community needs a cohesive standard for publish-subscribe functionality. Certainly there is interest in developing such a standard, as witness the number of proposals written on this topic (&xep0021;, &xep0024;, XEP-0028). Unfortunately, past discussion of this issue has been clouded by confusion over requirements and even terminology. This XEP seeks to clarify the situation somewhat and to provide a protocol for the subscribe half of publish-subscribe functionality within Jabber.</p>
</section1>
<section1 topic='Narrative'>
  <p>Traditional pub-sub consists of event notification. This makes it possible for entities to publish data and for other interested entities to receive notification when the data is published. The following are some likely applications of pub-sub functionality within Jabber:</p>
  <ul>
    <li>Auction and trading systems</li>
    <li>Online catalogs</li>
    <li>Document workflow systems</li>
    <li>Network management systems</li>
    <li>NNTP over Jabber</li>
    <li>Groupchat</li>
  </ul>
  <p>In such systems, a subscriber would request to receive notifications about data the subscriber is interested in. We define a "topic" as an object that defines the relationship between a publisher and its subscribers. Specifically, a topic contains three essential collections of information:</p>
  <ol>
    <li>A description of the information that will be provided</li>
    <li>A list of subscribers to items that fit the description</li>
    <li>One or more items that fit the description</li>
  </ol>
  <p>We define an "item" as an instance of data published by the publisher that fits the description associated with a topic. Each item MAY possess a unique identifier that enables the data to be tracked. (NOTE: This XEP does not address the durability of items, i.e., data storage.)</p>
  <p>A topic is addressed by means of a unique "topic ID". A topic ID is simply a string with no required semantic meaning. While a topic ID may have semantic meaning (e.g., '/instruments/guitars/electric' or 'rec.music.dylan'), such meaning is not necessary and a topic ID may be any random string (e.g., 'a1gh83jfn342092'). The only requirement is that a topic ID be unique within the context of a specific pub-sub domain (e.g., pubsub.jabber.org).</p>
</section1>
<section1 topic='Protocol Details'>

  <example caption="Protocol">
&lt;iq type="set" from="pgm@jabber.org" to="pubsub.jabber.org" id="1"&gt;
    &lt;query xmlns="jabber:iq:pubsub"&gt;
        &lt;subscribe&gt;
            &lt;topic id="12345"/&gt;
            &lt;topic id="/presence/dizzyd@jabber.org"/&gt;
        &lt;/subscribe&gt;
    &lt;/query&gt;
&lt;/iq&gt;

&lt;iq type="set" from="pgm@jabber.org" to="pubsub.jabber.org" id="1"&gt;
    &lt;query xmlns="jabber:iq:pubsub"&gt;
        &lt;unsubscribe&gt;
            &lt;topic id="12345"/&gt;
        &lt;/unsubscribe&gt;
    &lt;/query&gt;
&lt;/iq&gt;

&lt;iq type="set" to="pubsub.jabber.org" id="1"&gt;
    &lt;query xmlns="jabber:iq:pubsub"&gt;
        &lt;publish&gt;
            &lt;topic id="12345"&gt;
                &lt;item&gt;some kind of cdata goes here&lt;/item&gt;
            &lt;/topic&gt;
        &lt;/publish&gt;
    &lt;/query&gt;
&lt;/iq&gt;

&lt;iq type="set" to="pubsub.jabber.org" id="1"&gt;
    &lt;query xmlns="jabber:iq:pubsub"&gt;
        &lt;createtopic&gt;
            &lt;topic id="new_topic"&gt;
                &lt;profile&gt;
                    &lt;!-- is this even remotely close?? --&gt;
                    &lt;publisher&gt;pgm@jabber.org&lt;/publisher&gt;
                    &lt;publisher&gt;dizzyd@jabber.org&lt;/publisher&gt;
                &lt;/profile&gt;
            &lt;/topic&gt;
            &lt;topic id="another_topic&gt;
                &lt;profile&gt;
                    &lt;publisher/&gt;
                &lt;/profile&gt;
            &lt;/topic&gt;
        &lt;/createtopic&gt;
    &lt;/query&gt;
&lt;/iq&gt;

&lt;iq type="set" to="pubsub.jabber.org" id="1"&gt;
    &lt;query xmlns="jabber:iq:pubsub"&gt;
        &lt;removetopic&gt;
            &lt;topic id="12345"/&gt;
        &lt;/removetopic&gt;
    &lt;/query&gt;
&lt;/iq&gt;
  </example>

</section1>

<section1 topic='Author Note' anchor='authornote'>
  <p>Peter Millard, co-author of this specification, died on April 26, 2006.</p>
</section1>

</xep>
