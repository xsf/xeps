<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>User Gaming</title>
  <abstract>This document defines an XMPP protocol extension for communicating information about the games a user plays.</abstract>
  &LEGALNOTICE;
  <number>0196</number>
  <status>Deferred</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XMPP IM</spec>
    <spec>XEP-0060</spec>
    <spec>XEP-0163</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  &stpeter;
  <revision>
    <version>0.3</version>
    <date>2008-09-25</date>
    <initials>psa</initials>
    <remark><p>Modified namespace in accordance with protocol versioning policies.</p></remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2007-10-03</date>
    <initials>psa</initials>
    <remark><p>Updated in accordance with XEP-0163.</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2006-08-30</date>
    <initials>psa</initials>
    <remark><p>Initial version; added several more fields.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2006-08-28</date>
    <initials>psa</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>&xep0060; and &xep0163; can be used to publish a wide variety of "extended presence" information about users. This document specifies an extended presence payload format that communicates information about the games a user plays. This information may be of interest to a user's contacts and can also be used in social networking applications.</p>
</section1>
<section1 topic='Protocol' anchor='protocol'>
  <section2 topic='Container Element and Child Elements' anchor='protocol-elements'>
    <p>Information about games is provided by the user (or automated integration with gaming systems) and is propagated on the network by the user's client. The information container for gaming data is a &lt;game/&gt; element that is qualified by the 'urn:xmpp:gaming:0' namespace. The game information itself is provided as the XML character data of the following children of the &lt;game/&gt; element:</p>
    <table caption='Child Elements'>
      <tr>
        <th>Element</th>
        <th>Description</th>
        <th>Example</th>
        <th>Datatype</th>
        <th>Inclusion</th>
      </tr>
      <tr>
        <td>character_name</td>
        <td>The name of the user's character in the game</td>
        <td>Stentor</td>
        <td>xs:string</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>character_profile</td>
        <td>A URI for a profile of the user's character</td>
        <td>http://wow.example.com/profile.html?12345</td>
        <td>xs:anyURI</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>name</td>
        <td>The name of the game</td>
        <td>Worlds of Warfare</td>
        <td>xs:string</td>
        <td>REQUIRED</td>
      </tr>
      <tr>
        <td>level</td>
        <td>The user's level in the game</td>
        <td>66</td>
        <td>xs:string</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>server_address</td>
        <td>The hostname or IP address of the server where the user is playing</td>
        <td>wow6.example.com</td>
        <td>xs:string</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>server_name</td>
        <td>The name of the server where the user is playing</td>
        <td>WOW Example</td>
        <td>xs:string</td>
        <td>OPTIONAL</td>
      </tr>
      <tr>
        <td>uri</td>
        <td>A URI for the game or relevant gaming service</td>
        <td>http://wow.example.com/</td>
        <td>xs:anyURI</td>
        <td>OPTIONAL</td>
      </tr>
    </table>
    <p>NOTE: The datatypes specified above are defined in &w3xmlschema2;.</p>
  </section2>
  <section2 topic='Transport Mechanism' anchor='protocol-transport'>
    <p>When a user starts playing a game, its client may publish that fact to PEP node whose NodeID is "urn:xmpp:gaming:0" &NSNOTE; or to a generic pubsub node. Because gaming information is not pure presence information and can change independently of the user's availability, it SHOULD NOT be provided as an extension to the &PRESENCE; stanza type.</p>
    <example caption='User Publishes Gaming Information'><![CDATA[
<iq type='set' from='stpeter@jabber.org/work' id='gaming1'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='urn:xmpp:gaming:0'>
      <item id='1feea9cceec2537e1b561e66d45bc566e276f22f'>
        <game xmlns='urn:xmpp:gaming:0'>
          <name>chess</name>
          <uri>http://www.chesspark.com/</uri>
        </game>
      </item>
    </publish>
  </pubsub>
</iq>
]]></example>
    <p>The gaming information is then delivered to all subscribers:</p>
    <example caption='Gaming Information is Delivered to All Subscribers'><![CDATA[
<message from='stpeter@jabber.org' to='maineboy@jabber.org'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='urn:xmpp:gaming:0'>
      <item id='1feea9cceec2537e1b561e66d45bc566e276f22f'>
        <game xmlns='urn:xmpp:gaming:0'>
          <name>chess</name>
          <uri>http://www.chesspark.com/</uri>
        </game>
      </item>
    </items>
  </event>
</message>
]]></example>
    <p>When the user stops playing the game, the user's client SHOULD send an empty &lt;game/&gt; element with the same ItemID:</p>
    <example caption='User Publishes Stop Information'><![CDATA[
<iq type='set' from='stpeter@jabber.org/work' id='gaming2'>
  <pubsub xmlns='http://jabber.org/protocol/pubsub'>
    <publish node='urn:xmpp:gaming:0'>
      <item id='1feea9cceec2537e1b561e66d45bc566e276f22f'>
        <game xmlns='urn:xmpp:gaming:0'/>
      </item>
    </publish>
  </pubsub>
</iq>
]]></example>
    <example caption='Stop Information is Delivered to All Subscribers'><![CDATA[
<message from='stpeter@jabber.org' to='maineboy@jabber.org'>
  <event xmlns='http://jabber.org/protocol/pubsub#event'>
    <items node='urn:xmpp:gaming:0'>
      <item id='1feea9cceec2537e1b561e66d45bc566e276f22f'>
        <game xmlns='urn:xmpp:gaming:0'/>
      </item>
    </items>
  </event>
</message>
]]></example>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>The games that a user plays may be sensitive. A client MUST provide a way for a user to configure which games or types of games will not be published (e.g., via user preferences).</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='registrar-ns'>
    <p>This specification defines the following XML namespace:</p>
    <ul>
      <li>urn:xmpp:gaming:0</li>
    </ul>
    <p>Upon advancement of this specification from a status of Experimental to a status of Draft, the &REGISTRAR; shall add the foregoing namespace to the registry located at &NAMESPACES;, as described in Section 4 of &xep0053;.</p>
  </section2>
  <section2 topic='Namespace Versioning' anchor='registrar-versioning'>
    &NSVER;
  </section2>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:xmpp:gaming:0'
    xmlns='urn:xmpp:gaming:0'
    elementFormDefault='qualified'>

  <xs:element name='game'>
    <xs:complexType>
      <xs:sequence minOccurs='0'>
        <xs:element name='character_name' type='xs:string' minOccurs='0'/>
        <xs:element name='character_profile' type='xs:anyURI' minOccurs='0'/>
        <xs:element name='level' type='xs:string' minOccurs='0'/>
        <xs:element name='name' type='xs:string'/>
        <xs:element name='server_address' type='xs:string' minOccurs='0'/>
        <xs:element name='server_name' type='xs:string' minOccurs='0'/>
        <xs:element name='uri' type='xs:anyURI' minOccurs='0'/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
]]></code>
</section1>
</xep>
